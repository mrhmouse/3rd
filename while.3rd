: dip2 dip dip ;
: pop2 pop <pop <swap ;
: drop2 drop drop ;
: <swap dip swap ;
: <dup-call dip2 dup dip swap call dip2 swap ;
: <dup swap dup dip ;
: <drop swap drop ;
: <<drop dip drop ;
: <push swap push ;
: <push2 <push <push ;
: <push3 <push2 <push ;
: <pop swap pop ;
: dup2 <dup dup ;
: <<dup () <push3 pop dup dip pop <pop <drop ;
: pop> pop <pop dip2 <push swap ;
: times [swap dup call swap 1 - times] [drop2] [dup 0 <] if ;

["Hello!\n" .] 5 times
